// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerSearch.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Examples.GrpcModels {
  public static partial class PlayerSearch
  {
    static readonly string __ServiceName = "PlayerSearch";

    static readonly grpc::Marshaller<global::Examples.GrpcModels.TeamSearchRequest> __Marshaller_TeamSearchRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Examples.GrpcModels.TeamSearchRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Examples.GrpcModels.TeamSearchResponse> __Marshaller_TeamSearchResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Examples.GrpcModels.TeamSearchResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Examples.GrpcModels.PlayerSearchRequest> __Marshaller_PlayerSearchRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Examples.GrpcModels.PlayerSearchRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Examples.GrpcModels.PlayerSearchResponse> __Marshaller_PlayerSearchResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Examples.GrpcModels.PlayerSearchResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Examples.GrpcModels.TeamSearchRequest, global::Examples.GrpcModels.TeamSearchResponse> __Method_SearchTeam = new grpc::Method<global::Examples.GrpcModels.TeamSearchRequest, global::Examples.GrpcModels.TeamSearchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchTeam",
        __Marshaller_TeamSearchRequest,
        __Marshaller_TeamSearchResponse);

    static readonly grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> __Method_SearchPlayer_ServerStream = new grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SearchPlayer_ServerStream",
        __Marshaller_PlayerSearchRequest,
        __Marshaller_PlayerSearchResponse);

    static readonly grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> __Method_SearchPlayer_ClientStream = new grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "SearchPlayer_ClientStream",
        __Marshaller_PlayerSearchRequest,
        __Marshaller_PlayerSearchResponse);

    static readonly grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> __Method_SearchPlayer_DuplexStream = new grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "SearchPlayer_DuplexStream",
        __Marshaller_PlayerSearchRequest,
        __Marshaller_PlayerSearchResponse);

    static readonly grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> __Method_PushPlayer = new grpc::Method<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "PushPlayer",
        __Marshaller_PlayerSearchRequest,
        __Marshaller_PlayerSearchResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Examples.GrpcModels.PlayerSearchReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PlayerSearch</summary>
    public abstract partial class PlayerSearchBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Examples.GrpcModels.TeamSearchResponse> SearchTeam(global::Examples.GrpcModels.TeamSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task SearchPlayer_ServerStream(global::Examples.GrpcModels.PlayerSearchRequest request, grpc::IServerStreamWriter<global::Examples.GrpcModels.PlayerSearchResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Examples.GrpcModels.PlayerSearchResponse> SearchPlayer_ClientStream(grpc::IAsyncStreamReader<global::Examples.GrpcModels.PlayerSearchRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task SearchPlayer_DuplexStream(grpc::IAsyncStreamReader<global::Examples.GrpcModels.PlayerSearchRequest> requestStream, grpc::IServerStreamWriter<global::Examples.GrpcModels.PlayerSearchResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task PushPlayer(global::Examples.GrpcModels.PlayerSearchRequest request, grpc::IServerStreamWriter<global::Examples.GrpcModels.PlayerSearchResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PlayerSearch</summary>
    public partial class PlayerSearchClient : grpc::ClientBase<PlayerSearchClient>
    {
      /// <summary>Creates a new client for PlayerSearch</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PlayerSearchClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PlayerSearch that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PlayerSearchClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PlayerSearchClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PlayerSearchClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Examples.GrpcModels.TeamSearchResponse SearchTeam(global::Examples.GrpcModels.TeamSearchRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchTeam(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Examples.GrpcModels.TeamSearchResponse SearchTeam(global::Examples.GrpcModels.TeamSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchTeam, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Examples.GrpcModels.TeamSearchResponse> SearchTeamAsync(global::Examples.GrpcModels.TeamSearchRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchTeamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Examples.GrpcModels.TeamSearchResponse> SearchTeamAsync(global::Examples.GrpcModels.TeamSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchTeam, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Examples.GrpcModels.PlayerSearchResponse> SearchPlayer_ServerStream(global::Examples.GrpcModels.PlayerSearchRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchPlayer_ServerStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Examples.GrpcModels.PlayerSearchResponse> SearchPlayer_ServerStream(global::Examples.GrpcModels.PlayerSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SearchPlayer_ServerStream, null, options, request);
      }
      public virtual grpc::AsyncClientStreamingCall<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> SearchPlayer_ClientStream(grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchPlayer_ClientStream(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncClientStreamingCall<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> SearchPlayer_ClientStream(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_SearchPlayer_ClientStream, null, options);
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> SearchPlayer_DuplexStream(grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchPlayer_DuplexStream(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::Examples.GrpcModels.PlayerSearchRequest, global::Examples.GrpcModels.PlayerSearchResponse> SearchPlayer_DuplexStream(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_SearchPlayer_DuplexStream, null, options);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Examples.GrpcModels.PlayerSearchResponse> PushPlayer(global::Examples.GrpcModels.PlayerSearchRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PushPlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Examples.GrpcModels.PlayerSearchResponse> PushPlayer(global::Examples.GrpcModels.PlayerSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_PushPlayer, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PlayerSearchClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PlayerSearchClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PlayerSearchBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SearchTeam, serviceImpl.SearchTeam)
          .AddMethod(__Method_SearchPlayer_ServerStream, serviceImpl.SearchPlayer_ServerStream)
          .AddMethod(__Method_SearchPlayer_ClientStream, serviceImpl.SearchPlayer_ClientStream)
          .AddMethod(__Method_SearchPlayer_DuplexStream, serviceImpl.SearchPlayer_DuplexStream)
          .AddMethod(__Method_PushPlayer, serviceImpl.PushPlayer).Build();
    }

  }
}
#endregion
